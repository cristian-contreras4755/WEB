#pragma checksum "D:\PROYECTO - TESIS 2019\WEB\GeoControl\GeoControl\Views\Geolocalizacion\Geo.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "43202709e34e7397a702247810f698ca97d276fb"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Geolocalizacion_Geo), @"mvc.1.0.view", @"/Views/Geolocalizacion/Geo.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Geolocalizacion/Geo.cshtml", typeof(AspNetCore.Views_Geolocalizacion_Geo))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\PROYECTO - TESIS 2019\WEB\GeoControl\GeoControl\Views\_ViewImports.cshtml"
using GeoControl;

#line default
#line hidden
#line 2 "D:\PROYECTO - TESIS 2019\WEB\GeoControl\GeoControl\Views\_ViewImports.cshtml"
using GeoControl.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"43202709e34e7397a702247810f698ca97d276fb", @"/Views/Geolocalizacion/Geo.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5fe64ead6e248704a8f2225c635ff9763863bb85", @"/Views/_ViewImports.cshtml")]
    public class Views_Geolocalizacion_Geo : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Admin/assets/js/jquery.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "D:\PROYECTO - TESIS 2019\WEB\GeoControl\GeoControl\Views\Geolocalizacion\Geo.cshtml"
  
    ViewData["Title"] = "Index";
   // Html.RenderPartial("_RutaNavegacion");

#line default
#line hidden
            BeginContext(89, 792, true);
            WriteLiteral(@"    <script src=""https://maps.googleapis.com/maps/api/js?key=AIzaSyC6rj9tbuEM8vtmsMccct0E3vQlryMNFis&callback=initMap""
            async defer></script>


<div class=""row"">
    <div class=""col-xl-3"">
    
            <ol class=""breadcrumb float-left"">
                <li class=""breadcrumb-item active"">

              
                        <div class=""form-inline"">
                            <input id=""address"" type=""text"" placeholder=""Busqueda"" class=""form-control"">
                            <input class=""btn btn-sm btn-primary"" type=""button"" value=""buscar"" id=""txt_buscar"">
                        </div>
                   

                </li>
            </ol>

    </div>
</div>


<div id=""map"" style=""width:100%;height:1000px;"">


</div>



");
            EndContext();
            BeginContext(881, 55, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "43202709e34e7397a702247810f698ca97d276fb4750", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(936, 1519, true);
            WriteLiteral(@"
<script src=""https://www.gstatic.com/firebasejs/5.9.2/firebase.js""></script>
<!-- firebase  03 enlaces obligatorios-->
<script src=""https://www.gstatic.com/firebasejs/5.8.4/firebase-app.js""></script>
<script src=""https://www.gstatic.com/firebasejs/5.8.4/firebase-database.js""></script>
<script src=""https://www.gstatic.com/firebasejs/5.8.4/firebase-firestore.js""></script>
<script type=""text/javascript"">


    var lat_navegador = -12.079231;
    var lon_navegador = -77.0161324;
    //obtenemos  la latitud y  longitud  del  navegador



    function showPosition(position) {
         lat_navegador = position.coords.latitude;
         lon_navegador = position.coords.longitude;
       // alertify.error('Configuracion aplicada' + lat_navegador + '-' + lon_navegador);
    }


        // Initialize Firebase
        var config = {
            apiKey: ""AIzaSyBAccexU3bw5W-JrIACOoZLFmkKTWPaDc0"",
        authDomain: ""idsi-geo.firebaseapp.com"",
        databaseURL: ""https://idsi-geo.firebaseio.com""");
            WriteLiteral(@",
        projectId: ""idsi-geo"",
        storageBucket: ""idsi-geo.appspot.com"",
        messagingSenderId: ""197254829001""
      };
firebase.initializeApp(config);





  $(document).ready(function () {

        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(showPosition);
        }
        else {
            alertify.error('su Navegador No soporta geolocalización');
        }

    initMap();
});





var map;
var ruc_empresa = '");
            EndContext();
            BeginContext(2456, 23, false);
#line 91 "D:\PROYECTO - TESIS 2019\WEB\GeoControl\GeoControl\Views\Geolocalizacion\Geo.cshtml"
              Write(ViewData["ruc_empresa"]);

#line default
#line hidden
            EndContext();
            BeginContext(2479, 8471, true);
            WriteLiteral(@"';
var marcadores = [];
    var cod_documento;

    var posicion_anterior = [];
    var posicion_anterior_copia = [];







        var db_idsi = firebase.firestore();





    $('#btn_administracion').click(function () {




    });





    $(""td.cod"").click(function () {

        var iddoc = $(this).find(""td.cod"").eq(1).html();
        alertify.error(iddoc);

    });



    $(""#chk_alertaposicion_general"").click(function () {

     //   $(""#btn_confirmar"").show();
        var thisCheck = $(this);
        if ($(""#chk_alertaposicion_general"").is(':checked')) {

            alertify.confirm('Cofirmacion notificacion de posicion', '¿Esta seguro de activar las notificaciones de todos los vendedores?',
                function () {
                    $(""input[type=checkbox]"").prop(""checked"", true);
                    //recorremos la tabla
                    $(""#tbl_vendedores_configuracion tr"").each(function () {
                        // alertify.success($(");
            WriteLiteral(@"this).find(""td"").eq(0).html());
                        var iddoc = $(this).find(""td"").eq(0).html();
                        db_idsi.collection(""tb_geolocalizacion"").doc(iddoc).update({
                            ""estado_alerta"": true
                        });
                    });


                }, function () {
                    alertify.error('Cancelado')
                });


        } else {

            alertify.confirm('Cofirmacion notificacion de posicion', '¿Esta seguro de desactivar las notificaciones de todos los vendedores?',
                function () {
                    $(""input[type=checkbox]"").prop(""checked"", false);

                    //recorremos la tabla
                    $(""#tbl_vendedores_configuracion tr"").each(function () {
                        // alertify.success($(this).find(""td"").eq(0).html());
                        var iddoc = $(this).find(""td"").eq(0).html();
                        db_idsi.collection(""tb_geolocalizacion"").doc(iddoc).upda");
            WriteLiteral(@"te({
                            ""estado_alerta"": false
                        });
                    });
                }
                , function () {
                    alertify.error('Cancelado');
                });
        }




    });





    function initMap() {
        try {
            var myubicacion = { lat: lat_navegador, lng: lon_navegador };
            map = new google.maps.Map(document.getElementById('map'), {
                zoom: 14,
                center: myubicacion,
                gestureHandling: 'greedy'
            });

        } catch (error) {

           // alertify.error(error);

         } finally { }


    }






    //geolocalizacion VENDEDORES
    //LECTURA DE DATOS DESDE FIREBASE
    var db_idsi = firebase.firestore();
var tabla_vendedores = document.getElementById('tbl_vededores');

    db_idsi.collection(""tb_geolocalizacion"").where(""ruc_empresa"", ""=="", ruc_empresa).where(""estado_visible"", ""=="", true).where(""estado_ac");
            WriteLiteral(@"tivo"", ""=="", true).where(""estado_online"", ""=="", true).onSnapshot((querySnapshot) => {

        EliminarMarcadores();
        querySnapshot.forEach((doc) => {
            //copia del anterir del objeto
            RegistrarPosicionAnterior(doc);


            //control estado_online
            var date2 = new Date((doc.data().fecha.seconds*1000));
            ValidarFecha(date2, doc.data().min_online, doc.id);
            CrearMarcadores(doc);
        });

        posicion_anterior_copia = posicion_anterior;
        posicion_anterior = [];

    });



    //filtro de mensajes
    db_idsi.collection(""tb_geolocalizacion"").where(""ruc_empresa"", ""=="", ruc_empresa).where(""estado_visible"", ""=="", true).where(""estado_activo"", ""=="", true).where(""estado_online"", ""=="", true).where(""estado_alertado"", ""=="", true).onSnapshot((querySnapshot) => {
        querySnapshot.forEach((doc) => {
            if (doc.data().estado_alerta == true) {
                if (doc.data().estado_alertado == true) {
    ");
            WriteLiteral(@"                alertify.success('El vendedor:' + doc.data().nombres + ' Actualizó su posición.');
                    ActualizarVendedorAlertado(doc.id);
                }
            }
        });
    });
    //filtro de mensaje












    function CrearMarcadores(doc) {


    var marker = new google.maps.Marker({
        position: new google.maps.LatLng(doc.data().posicion._long, doc.data().posicion._lat),
        map: map,
        title: doc.data().nombres,
        icon: '/Recursos/Marcadores/marcado_idsi.png',
        id_marcador: doc.id

        });




        var estado_vendedor = """";


        estado_vendedor = ""<span class='label label-success'>Online</span>"";

   // var texto = ""<div class='card' style='width: 18rem;'><div class='card-body'><h5 class='card-title'>"" + doc.data().nombres + ""</h5><p class='card-text'> <h5>Codigo:"" + doc.data().cod_vendedor + ""</h5> </p> <h5>Bateria:"" + doc.data().p_bateria + ""</h5><h5>Ultima conexion:"" + marker.get('id_marca");
            WriteLiteral(@"dor') + ""</h5> </div><div>"";
        var texto = ""<div class='card' style='width: 18rem;'>"" + estado_vendedor+""<div class='card-body'><b> <h6 class='card-title'>"" + doc.data().nombres + ""</h6> </b><p class='card-text'> <h6>Codigo:"" + doc.data().cod_vendedor + ""</h6> </p> <h6>Bateria:"" + doc.data().p_bateria + ""</h6><h6>Fecha:"" + timeConverter(doc.data().fecha.seconds) + ""</h6> </div><div>"";

    var infowindow = new google.maps.InfoWindow({
        content: texto
    });


    infowindow.open(map, marker);
        marcadores.push(marker);
    }




function PintarMarcadore(map) {
    for (var i = 0; i < marcadores.length; i++) {
        marcadores[i].setMap(map);
    }

    }



    function PintarMarcador(map) {
        map.setMap();
    }



function EliminarMarcadores() {
    PintarMarcadore(null);
    markers = [];
}

function timeConverter(t) {
        var a = new Date(t * 1000);
        var today = new Date();
        var yesterday = new Date(Date.now() - 86400000);");
            WriteLiteral(@"
        var months = ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Setiembre', 'Octubre', 'Noviembre', 'Diciembre'];
        var year = a.getFullYear();
        var month = months[a.getMonth()];
        var date = a.getDate();
        var hour = a.getHours();
        var min = a.getMinutes();
        if (a.setHours(0, 0, 0, 0) == today.setHours(0, 0, 0, 0))
            return 'Hoy, ' + hour + ':' + min;
        else if (a.setHours(0, 0, 0, 0) == yesterday.setHours(0, 0, 0, 0))
            return 'Ayer, ' + hour + ':' + min;
        else if (year == today.getFullYear())
            return date + ' ' + month + ', ' + hour + ':' + min;
        else
            return date + ' ' + month + ' ' + year + ', ' + hour + ':' + min;
    }





    function EliminarMarcadorPorIndice(indice){
        if (indice != null) {
            marcadores.splice(indice, 1);
        }
    }



    function ActualizarVendedorOffLine(codigo) {
        db_idsi.collection(""tb_g");
            WriteLiteral(@"eolocalizacion"").doc(codigo).update({
            ""estado_online"": false
        }).then(function () {
         //  validamos si actuliza con false el parametro estado online  alertify.success('Actualizado');
            });
    }


    function ActualizarVendedorAlertado(codigo) {
        db_idsi.collection(""tb_geolocalizacion"").doc(codigo).update({
            ""estado_alertado"": false
        }).then(function () {
            //  validamos si actuliza con false el parametro estado online  alertify.success('Actualizado');
        });
    }


    function ValidarFecha(fechaConexion, minutos, codigo) {

        if (minutos != 0 && minutos != null) {

            var FechaActual = new Date();
            var diferencia = ((FechaActual.getTime()) - (fechaConexion.getTime())) / 1000 / 60;

            if (diferencia > minutos) {
                ActualizarVendedorOffLine(codigo);
            }
        }

    }





    function RegistrarPosicionAnterior(doc) {
            var id");
            WriteLiteral(@"_tbl = doc.id;
            var latitud = doc.data().posicion._lat;
            var longitud = doc.data().posicion._long;
            var objmemoria = { id: id_tbl, _lat: latitud, _long: longitud };
            posicion_anterior.push(objmemoria);
    }



</script>


");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
